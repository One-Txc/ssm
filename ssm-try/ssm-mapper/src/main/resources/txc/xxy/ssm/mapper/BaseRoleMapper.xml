<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="txc.xxy.ssm.mapper.BaseRoleMapper">
	<resultMap id="BaseResultMap" type="txc.xxy.ssm.model.BaseRole">
		<id column="role_id" jdbcType="BIGINT" property="roleId" />
		<result column="role_name" jdbcType="VARCHAR" property="roleName" />
		<result column="status" jdbcType="CHAR" property="status" />
		<result column="be_role_ids" jdbcType="VARCHAR" property="beRoleIds" />
		<result column="role_type" jdbcType="CHAR" property="roleType" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		role_id, role_name, status, be_role_ids, role_type, create_time, update_time
	</sql>
	<select id="selectByExample" parameterType="txc.xxy.ssm.model.BaseRoleExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from base_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from base_role
		where role_id = #{roleId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from base_role
		where role_id = #{roleId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="txc.xxy.ssm.model.BaseRoleExample">
		delete from base_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="txc.xxy.ssm.model.BaseRole">
		insert into base_role (role_id, role_name, status, 
			be_role_ids, role_type, create_time, 
			update_time)
		values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
			#{beRoleIds,jdbcType=VARCHAR}, #{roleType,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
			#{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="txc.xxy.ssm.model.BaseRole">
		insert into base_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="beRoleIds != null">
				be_role_ids,
			</if>
			<if test="roleType != null">
				role_type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=BIGINT},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=CHAR},
			</if>
			<if test="beRoleIds != null">
				#{beRoleIds,jdbcType=VARCHAR},
			</if>
			<if test="roleType != null">
				#{roleType,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByExampleSelective" parameterType="map">
		update base_role
		<set>
			<if test="record.roleId != null">
				role_id = #{record.roleId,jdbcType=BIGINT},
			</if>
			<if test="record.roleName != null">
				role_name = #{record.roleName,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=CHAR},
			</if>
			<if test="record.beRoleIds != null">
				be_role_ids = #{record.beRoleIds,jdbcType=VARCHAR},
			</if>
			<if test="record.roleType != null">
				role_type = #{record.roleType,jdbcType=CHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update base_role
		set role_id = #{record.roleId,jdbcType=BIGINT},
			role_name = #{record.roleName,jdbcType=VARCHAR},
			status = #{record.status,jdbcType=CHAR},
			be_role_ids = #{record.beRoleIds,jdbcType=VARCHAR},
			role_type = #{record.roleType,jdbcType=CHAR},
			create_time = #{record.createTime,jdbcType=TIMESTAMP},
			update_time = #{record.updateTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="txc.xxy.ssm.model.BaseRole">
		update base_role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=CHAR},
			</if>
			<if test="beRoleIds != null">
				be_role_ids = #{beRoleIds,jdbcType=VARCHAR},
			</if>
			<if test="roleType != null">
				role_type = #{roleType,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="txc.xxy.ssm.model.BaseRole">
		update base_role
		set role_name = #{roleName,jdbcType=VARCHAR},
			status = #{status,jdbcType=CHAR},
			be_role_ids = #{beRoleIds,jdbcType=VARCHAR},
			role_type = #{roleType,jdbcType=CHAR},
			create_time = #{createTime,jdbcType=TIMESTAMP},
			update_time = #{updateTime,jdbcType=TIMESTAMP}
		where role_id = #{roleId,jdbcType=BIGINT}
	</update>
</mapper>