<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="txc.xxy.ssm.mapper.RegionCodeMapper">
	<resultMap id="BaseResultMap" type="txc.xxy.ssm.model.RegionCode">
		<id column="region_id" jdbcType="BIGINT" property="regionId" />
		<result column="region_code" jdbcType="VARCHAR" property="regionCode" />
		<result column="region_name" jdbcType="VARCHAR" property="regionName" />
		<result column="parent_id" jdbcType="BIGINT" property="parentId" />
		<result column="region_level" jdbcType="INTEGER" property="regionLevel" />
		<result column="region_order" jdbcType="INTEGER" property="regionOrder" />
		<result column="region_name_en" jdbcType="VARCHAR" property="regionNameEn" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		region_id, region_code, region_name, parent_id, region_level, region_order, region_name_en
	</sql>
	<select id="selectByExample" parameterType="txc.xxy.ssm.model.RegionCodeExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from region_code
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from region_code
		where region_id = #{regionId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from region_code
		where region_id = #{regionId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="txc.xxy.ssm.model.RegionCodeExample">
		delete from region_code
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="txc.xxy.ssm.model.RegionCode">
		insert into region_code (region_id, region_code, region_name, 
			parent_id, region_level, region_order, 
			region_name_en)
		values (#{regionId,jdbcType=BIGINT}, #{regionCode,jdbcType=VARCHAR}, #{regionName,jdbcType=VARCHAR}, 
			#{parentId,jdbcType=BIGINT}, #{regionLevel,jdbcType=INTEGER}, #{regionOrder,jdbcType=INTEGER}, 
			#{regionNameEn,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="txc.xxy.ssm.model.RegionCode">
		insert into region_code
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="regionId != null">
				region_id,
			</if>
			<if test="regionCode != null">
				region_code,
			</if>
			<if test="regionName != null">
				region_name,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="regionLevel != null">
				region_level,
			</if>
			<if test="regionOrder != null">
				region_order,
			</if>
			<if test="regionNameEn != null">
				region_name_en,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="regionId != null">
				#{regionId,jdbcType=BIGINT},
			</if>
			<if test="regionCode != null">
				#{regionCode,jdbcType=VARCHAR},
			</if>
			<if test="regionName != null">
				#{regionName,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=BIGINT},
			</if>
			<if test="regionLevel != null">
				#{regionLevel,jdbcType=INTEGER},
			</if>
			<if test="regionOrder != null">
				#{regionOrder,jdbcType=INTEGER},
			</if>
			<if test="regionNameEn != null">
				#{regionNameEn,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByExampleSelective" parameterType="map">
		update region_code
		<set>
			<if test="record.regionId != null">
				region_id = #{record.regionId,jdbcType=BIGINT},
			</if>
			<if test="record.regionCode != null">
				region_code = #{record.regionCode,jdbcType=VARCHAR},
			</if>
			<if test="record.regionName != null">
				region_name = #{record.regionName,jdbcType=VARCHAR},
			</if>
			<if test="record.parentId != null">
				parent_id = #{record.parentId,jdbcType=BIGINT},
			</if>
			<if test="record.regionLevel != null">
				region_level = #{record.regionLevel,jdbcType=INTEGER},
			</if>
			<if test="record.regionOrder != null">
				region_order = #{record.regionOrder,jdbcType=INTEGER},
			</if>
			<if test="record.regionNameEn != null">
				region_name_en = #{record.regionNameEn,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update region_code
		set region_id = #{record.regionId,jdbcType=BIGINT},
			region_code = #{record.regionCode,jdbcType=VARCHAR},
			region_name = #{record.regionName,jdbcType=VARCHAR},
			parent_id = #{record.parentId,jdbcType=BIGINT},
			region_level = #{record.regionLevel,jdbcType=INTEGER},
			region_order = #{record.regionOrder,jdbcType=INTEGER},
			region_name_en = #{record.regionNameEn,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="txc.xxy.ssm.model.RegionCode">
		update region_code
		<set>
			<if test="regionCode != null">
				region_code = #{regionCode,jdbcType=VARCHAR},
			</if>
			<if test="regionName != null">
				region_name = #{regionName,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=BIGINT},
			</if>
			<if test="regionLevel != null">
				region_level = #{regionLevel,jdbcType=INTEGER},
			</if>
			<if test="regionOrder != null">
				region_order = #{regionOrder,jdbcType=INTEGER},
			</if>
			<if test="regionNameEn != null">
				region_name_en = #{regionNameEn,jdbcType=VARCHAR},
			</if>
		</set>
		where region_id = #{regionId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="txc.xxy.ssm.model.RegionCode">
		update region_code
		set region_code = #{regionCode,jdbcType=VARCHAR},
			region_name = #{regionName,jdbcType=VARCHAR},
			parent_id = #{parentId,jdbcType=BIGINT},
			region_level = #{regionLevel,jdbcType=INTEGER},
			region_order = #{regionOrder,jdbcType=INTEGER},
			region_name_en = #{regionNameEn,jdbcType=VARCHAR}
		where region_id = #{regionId,jdbcType=BIGINT}
	</update>
</mapper>