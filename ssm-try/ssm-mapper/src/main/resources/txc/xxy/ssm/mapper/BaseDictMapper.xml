<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="txc.xxy.ssm.mapper.BaseDictMapper">
	<resultMap id="BaseResultMap" type="txc.xxy.ssm.model.BaseDict">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="sys_name" jdbcType="VARCHAR" property="sysName" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="order_no" jdbcType="INTEGER" property="orderNo" />
		<result column="valid_flag" jdbcType="CHAR" property="validFlag" />
		<result column="parent_id" jdbcType="BIGINT" property="parentId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="create_uid" jdbcType="BIGINT" property="createUid" />
		<result column="update_uid" jdbcType="BIGINT" property="updateUid" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, sys_name, code, name, remark, order_no, valid_flag, parent_id, create_time, update_time, 
		create_uid, update_uid
	</sql>
	<select id="selectByExample" parameterType="txc.xxy.ssm.model.BaseDictExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from base_dict
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from base_dict
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from base_dict
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="txc.xxy.ssm.model.BaseDictExample">
		delete from base_dict
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="txc.xxy.ssm.model.BaseDict">
		insert into base_dict (id, sys_name, code, 
			name, remark, order_no, 
			valid_flag, parent_id, create_time, 
			update_time, create_uid, update_uid
			)
		values (#{id,jdbcType=BIGINT}, #{sysName,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
			#{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{orderNo,jdbcType=INTEGER}, 
			#{validFlag,jdbcType=CHAR}, #{parentId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
			#{updateTime,jdbcType=TIMESTAMP}, #{createUid,jdbcType=BIGINT}, #{updateUid,jdbcType=BIGINT}
			)
	</insert>
	<insert id="insertSelective" parameterType="txc.xxy.ssm.model.BaseDict">
		insert into base_dict
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="sysName != null">
				sys_name,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="validFlag != null">
				valid_flag,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="createUid != null">
				create_uid,
			</if>
			<if test="updateUid != null">
				update_uid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="sysName != null">
				#{sysName,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="orderNo != null">
				#{orderNo,jdbcType=INTEGER},
			</if>
			<if test="validFlag != null">
				#{validFlag,jdbcType=CHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUid != null">
				#{createUid,jdbcType=BIGINT},
			</if>
			<if test="updateUid != null">
				#{updateUid,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<update id="updateByExampleSelective" parameterType="map">
		update base_dict
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.sysName != null">
				sys_name = #{record.sysName,jdbcType=VARCHAR},
			</if>
			<if test="record.code != null">
				code = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.orderNo != null">
				order_no = #{record.orderNo,jdbcType=INTEGER},
			</if>
			<if test="record.validFlag != null">
				valid_flag = #{record.validFlag,jdbcType=CHAR},
			</if>
			<if test="record.parentId != null">
				parent_id = #{record.parentId,jdbcType=BIGINT},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.createUid != null">
				create_uid = #{record.createUid,jdbcType=BIGINT},
			</if>
			<if test="record.updateUid != null">
				update_uid = #{record.updateUid,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update base_dict
		set id = #{record.id,jdbcType=BIGINT},
			sys_name = #{record.sysName,jdbcType=VARCHAR},
			code = #{record.code,jdbcType=VARCHAR},
			name = #{record.name,jdbcType=VARCHAR},
			remark = #{record.remark,jdbcType=VARCHAR},
			order_no = #{record.orderNo,jdbcType=INTEGER},
			valid_flag = #{record.validFlag,jdbcType=CHAR},
			parent_id = #{record.parentId,jdbcType=BIGINT},
			create_time = #{record.createTime,jdbcType=TIMESTAMP},
			update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			create_uid = #{record.createUid,jdbcType=BIGINT},
			update_uid = #{record.updateUid,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="txc.xxy.ssm.model.BaseDict">
		update base_dict
		<set>
			<if test="sysName != null">
				sys_name = #{sysName,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=INTEGER},
			</if>
			<if test="validFlag != null">
				valid_flag = #{validFlag,jdbcType=CHAR},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUid != null">
				create_uid = #{createUid,jdbcType=BIGINT},
			</if>
			<if test="updateUid != null">
				update_uid = #{updateUid,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="txc.xxy.ssm.model.BaseDict">
		update base_dict
		set sys_name = #{sysName,jdbcType=VARCHAR},
			code = #{code,jdbcType=VARCHAR},
			name = #{name,jdbcType=VARCHAR},
			remark = #{remark,jdbcType=VARCHAR},
			order_no = #{orderNo,jdbcType=INTEGER},
			valid_flag = #{validFlag,jdbcType=CHAR},
			parent_id = #{parentId,jdbcType=BIGINT},
			create_time = #{createTime,jdbcType=TIMESTAMP},
			update_time = #{updateTime,jdbcType=TIMESTAMP},
			create_uid = #{createUid,jdbcType=BIGINT},
			update_uid = #{updateUid,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>