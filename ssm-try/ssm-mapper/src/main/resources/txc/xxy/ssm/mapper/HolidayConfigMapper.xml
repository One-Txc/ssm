<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="txc.xxy.ssm.mapper.HolidayConfigMapper">
	<resultMap id="BaseResultMap" type="txc.xxy.ssm.model.HolidayConfig">
		<id column="sid" jdbcType="VARCHAR" property="sid" />
		<result column="start_date" jdbcType="DATE" property="startDate" />
		<result column="end_date" jdbcType="DATE" property="endDate" />
		<result column="effective_cycle" jdbcType="VARCHAR" property="effectiveCycle" />
		<result column="owner_level" jdbcType="CHAR" property="ownerLevel" />
		<result column="valid_flag" jdbcType="CHAR" property="validFlag" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		sid, start_date, end_date, effective_cycle, owner_level, valid_flag, create_time, 
		update_time
	</sql>
	<select id="selectByExample" parameterType="txc.xxy.ssm.model.HolidayConfigExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from holiday_config
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from holiday_config
		where sid = #{sid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from holiday_config
		where sid = #{sid,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="txc.xxy.ssm.model.HolidayConfigExample">
		delete from holiday_config
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="txc.xxy.ssm.model.HolidayConfig">
		insert into holiday_config (sid, start_date, end_date, 
			effective_cycle, owner_level, valid_flag, 
			create_time, update_time)
		values (#{sid,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
			#{effectiveCycle,jdbcType=VARCHAR}, #{ownerLevel,jdbcType=CHAR}, #{validFlag,jdbcType=CHAR}, 
			#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="txc.xxy.ssm.model.HolidayConfig">
		insert into holiday_config
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sid != null">
				sid,
			</if>
			<if test="startDate != null">
				start_date,
			</if>
			<if test="endDate != null">
				end_date,
			</if>
			<if test="effectiveCycle != null">
				effective_cycle,
			</if>
			<if test="ownerLevel != null">
				owner_level,
			</if>
			<if test="validFlag != null">
				valid_flag,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="sid != null">
				#{sid,jdbcType=VARCHAR},
			</if>
			<if test="startDate != null">
				#{startDate,jdbcType=DATE},
			</if>
			<if test="endDate != null">
				#{endDate,jdbcType=DATE},
			</if>
			<if test="effectiveCycle != null">
				#{effectiveCycle,jdbcType=VARCHAR},
			</if>
			<if test="ownerLevel != null">
				#{ownerLevel,jdbcType=CHAR},
			</if>
			<if test="validFlag != null">
				#{validFlag,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByExampleSelective" parameterType="map">
		update holiday_config
		<set>
			<if test="record.sid != null">
				sid = #{record.sid,jdbcType=VARCHAR},
			</if>
			<if test="record.startDate != null">
				start_date = #{record.startDate,jdbcType=DATE},
			</if>
			<if test="record.endDate != null">
				end_date = #{record.endDate,jdbcType=DATE},
			</if>
			<if test="record.effectiveCycle != null">
				effective_cycle = #{record.effectiveCycle,jdbcType=VARCHAR},
			</if>
			<if test="record.ownerLevel != null">
				owner_level = #{record.ownerLevel,jdbcType=CHAR},
			</if>
			<if test="record.validFlag != null">
				valid_flag = #{record.validFlag,jdbcType=CHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update holiday_config
		set sid = #{record.sid,jdbcType=VARCHAR},
			start_date = #{record.startDate,jdbcType=DATE},
			end_date = #{record.endDate,jdbcType=DATE},
			effective_cycle = #{record.effectiveCycle,jdbcType=VARCHAR},
			owner_level = #{record.ownerLevel,jdbcType=CHAR},
			valid_flag = #{record.validFlag,jdbcType=CHAR},
			create_time = #{record.createTime,jdbcType=TIMESTAMP},
			update_time = #{record.updateTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="txc.xxy.ssm.model.HolidayConfig">
		update holiday_config
		<set>
			<if test="startDate != null">
				start_date = #{startDate,jdbcType=DATE},
			</if>
			<if test="endDate != null">
				end_date = #{endDate,jdbcType=DATE},
			</if>
			<if test="effectiveCycle != null">
				effective_cycle = #{effectiveCycle,jdbcType=VARCHAR},
			</if>
			<if test="ownerLevel != null">
				owner_level = #{ownerLevel,jdbcType=CHAR},
			</if>
			<if test="validFlag != null">
				valid_flag = #{validFlag,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where sid = #{sid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="txc.xxy.ssm.model.HolidayConfig">
		update holiday_config
		set start_date = #{startDate,jdbcType=DATE},
			end_date = #{endDate,jdbcType=DATE},
			effective_cycle = #{effectiveCycle,jdbcType=VARCHAR},
			owner_level = #{ownerLevel,jdbcType=CHAR},
			valid_flag = #{validFlag,jdbcType=CHAR},
			create_time = #{createTime,jdbcType=TIMESTAMP},
			update_time = #{updateTime,jdbcType=TIMESTAMP}
		where sid = #{sid,jdbcType=VARCHAR}
	</update>
</mapper>